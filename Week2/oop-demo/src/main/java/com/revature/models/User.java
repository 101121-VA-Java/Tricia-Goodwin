package com.revature.models;

import java.util.Arrays;

public class User {

	// instance variable
	private String username;
	private String password;
	private int age;
	private Task[] tasks = new Task[3]; // Each user can only have 3 tasks

	//// Setter & Getter
	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		if (age < 0) {
			this.age = 0;
		} else {
			this.age = age;
		}
	}

	///////////////////

	// static variable
	public static int numberOfUsers;

//////Autogenerated setters&getters

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	
	

	/////////////
	


	public Task[] getTasks() {
		return tasks;
	}

	public void setTasks(Task[] tasks) {
		this.tasks = tasks;
	}

	
	public User(String username, String password, int age) {
		super();
		this.username = username;
		this.password = password;
		this.age = age;
	}

	public User(String username, String password, int age, Task[] tasks) {
		super();
		this.username = username;
		this.password = password;
		this.age = age;
		this.tasks = tasks;
	}

	public User() {
		super();
	}

	public static int getNumOfUsers() {
		return numberOfUsers;
	}

	public void instanceMethod() {
		System.out.println("This is an isntance method");
	}



	@Override
	public String toString() {
		return "User [ \n username=" + username + "\n password=" + password + "\n age=" + age + "\n tasks="
				+ Arrays.toString(tasks) + "\n]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + age;
		result = prime * result + ((password == null) ? 0 : password.hashCode());
		result = prime * result + Arrays.hashCode(tasks);
		result = prime * result + ((username == null) ? 0 : username.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		User other = (User) obj;
		if (age != other.age)
			return false;
		if (password == null) {
			if (other.password != null)
				return false;
		} else if (!password.equals(other.password))
			return false;
		if (!Arrays.equals(tasks, other.tasks))
			return false;
		if (username == null) {
			if (other.username != null)
				return false;
		} else if (!username.equals(other.username))
			return false;
		return true;
	}



}
